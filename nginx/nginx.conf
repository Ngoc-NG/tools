# File: nginx.conf
#
# Author: Massimo Cannavo <massimo5cannavo@gmail.com>
# Date:   Tue Jun 19 15:19:34 PDT 2018
#
# Configuration file for nginx HTTP load balancer.
#
# 

# Defines the number of worker processes.
#
# The optimal value depends on many factors including (but not limited to) 
# the number of CPU cores, the number of hard disk drives that store data,
# and load pattern. When one is in doubt, setting it to the number of
# available CPU cores would be a good start (the value "auto" will try to
# autodetect it).
worker_processes 4;

# Changes the limit on the largest size of a core file (RLIMIT_CORE) for
# worker processes. Used to increase the limit without restarting the main
# process.
worker_rlimit_nofile 40000;

# Provides the configuration file context in which the directives that
# affect connection processing are specified.
events {

  # Sets the maximum number of simultaneous connections that can be
  # opened by a worker process.
  #
  # It should be kept in mind that this number includes all connections
  # (e.g. connections with proxied servers, among others), not only
  # connections with clients. Another consideration is that the actual
  # number of simultaneous connections cannot exceed the current limit
  # on the maximum number of open files, which can be changed by
  # worker_rlimit_nofile.
  worker_connections 8192;
}

# Provides the configuration file context in which the HTTP server
# directives are specified.
http {

  # Sets configuration for a virtual server. There is no clear separation
  # between IP-based (based on the IP address) and name-based (based on the
  # "Host" request header field) virtual servers. Instead, the listen directives
  # describe all addresses and ports that should accept connections for the server,
  # and the server_name directive lists all server names.
  server {
    listen 80;
    return 301 https://$host$request_uri;
  }
}

# Provides the configuration file context in which the stream server
# directives are specified.
stream {

  # Defines a group of servers. Servers can listen on different ports. In
  # addition, servers listening on TCP and UNIX-domain sockets can be mixed.
  #
  # By default, connections are distributed between the servers using a
  # weighted round-robin balancing method. 
  upstream rancher_servers {
    least_conn;
    server 138.68.44.19:443 max_fails=3 fail_timeout=5s;
    server 138.197.194.111:443 max_fails=3 fail_timeout=5s;
  }

  # Sets the address of a proxied server. The address can be specified as
  # a domain name or IP address, and a port.
  server {
    listen 443;
    proxy_pass rancher_servers;
  }
}
